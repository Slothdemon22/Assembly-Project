
Left:db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xe0, 0x3f, 0x00, 0x3f, 0xe0, 0x3f, 0x00, 0x3f, 0xe0, 0x3f, 0x00, 0x3f, 0xe0, 0x3f, 0x00, 0x3f, 0xe0, 0x3f, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff
Right: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xfc, 0x07, 0xfe, 0x00, 0xfc, 0x07, 0xfe, 0x00, 0xfc, 0x07, 0xfe, 0x00, 0xfc, 0x07, 0xfe, 0x00, 0xfc, 0x07, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xfe, 0x00	
Bottom: db 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0xff, 0xc0, 0x1f, 0xe0, 0xff, 0xc0, 0x1f, 0xe0, 0xff, 0xc0, 0x1f, 0xe0, 0xff, 0xc0, 0x1f, 0xe0
BottomRight:db 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x07, 0x83, 0xc0, 0x07, 0xf8, 0x03, 0xff, 0x07, 0xf8, 0x03, 0xff, 0x07, 0xf8, 0x03, 0xff, 0x07, 0xf8, 0x03, 0xff
G:db 0x1f, 0xff, 0xff, 0xfe, 0x10, 0x00, 0x00, 0x02, 0x70, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x47, 0xff, 0xff, 0xfe, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x0f, 0xff, 0xfe, 0x44, 0x08, 0x00, 0x02, 0x44, 0x08, 0x00, 0x02, 0x44, 0x0f, 0xff, 0xf2, 0x44, 0x00, 0x00, 0x12, 0x44, 0x00, 0x00, 0x12, 0x44, 0x00, 0x00, 0x12, 0x44, 0x00, 0x00, 0x12, 0x44, 0x00, 0x00, 0x12, 0x44, 0x00, 0x00, 0x12, 0x44, 0x00, 0x00, 0x12, 0x47, 0xff, 0xff, 0xf2, 0x40, 0x00, 0x00, 0x02, 0x70, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x02, 0x1f, 0xff, 0xff, 0xfe	
A: db 0x3f, 0xff, 0xff, 0xfc, 0x20, 0x00, 0x00, 0x04, 0x60, 0x00, 0x00, 0x06, 0x40, 0x00, 0x00, 0x02, 0x43, 0xff, 0xff, 0xe2, 0x42, 0x00, 0x00, 0x22, 0x42, 0x00, 0x00, 0x22, 0x42, 0x00, 0x00, 0x22, 0x42, 0x00, 0x00, 0x22, 0x43, 0xff, 0xff, 0xe2, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x4f, 0xff, 0xff, 0xf2, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x12, 0x78, 0x00, 0x00, 0x1e
M:db 0x3f, 0xff, 0xff, 0xfc, 0x20, 0x00, 0x00, 0x04, 0x60, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x02, 0x47, 0xc3, 0xe1, 0xf2, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x44, 0x42, 0x21, 0x12, 0x7c, 0x7e, 0x3f, 0x1e	
E: db 0x3f, 0xff, 0xff, 0xfc, 0x20, 0x00, 0x00, 0x04, 0x60, 0x00, 0x00, 0x04, 0x47, 0xff, 0xff, 0xfc, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xfc, 0x40, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x04, 0x47, 0xff, 0xff, 0xfc, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xfc, 0x60, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x04, 0x3f, 0xff, 0xff, 0xfc	
O:db 0x7f, 0xff, 0xff, 0xfe, 0x40, 0x00, 0x00, 0x02, 0xc0, 0x00, 0x00, 0x01, 0x8f, 0xff, 0xff, 0xf1, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x88, 0x00, 0x00, 0x11, 0x8f, 0xff, 0xff, 0xf1, 0xc0, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x02, 0x7f, 0xff, 0xff, 0xfe	
V:db 0x7e, 0x00, 0x00, 0x7e, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x42, 0x00, 0x00, 0x42, 0x43, 0xf0, 0x0f, 0xc2, 0x40, 0x10, 0x08, 0x02, 0x70, 0x1e, 0x78, 0x0e, 0x10, 0x02, 0x40, 0x08, 0x1c, 0x03, 0xc0, 0x38, 0x04, 0x00, 0x00, 0x20, 0x07, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x80, 0x01, 0xc0, 0x03, 0x80, 0x00, 0x40, 0x02, 0x00, 0x00, 0x70, 0x0e, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00	
;E:db 0x7f, 0xff, 0xff, 0xfe, 0x40, 0x00, 0x00, 0x02, 0xc0, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x8f, 0xff, 0xff, 0xfe, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x8f, 0xff, 0xff, 0xfe, 0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x02, 0x8f, 0xff, 0xff, 0xfe, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x8f, 0xff, 0xff, 0xfe, 0x80, 0x00, 0x00, 0x02, 0xc0, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x7f, 0xff, 0xff, 0xfe	
R:db 0x7f, 0xff, 0xff, 0xfe, 0x40, 0x00, 0x00, 0x02, 0xc0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x01, 0x87, 0xff, 0xff, 0xc1, 0x84, 0x00, 0x00, 0x41, 0x84, 0x00, 0x00, 0x41, 0x84, 0x00, 0x00, 0x41, 0x84, 0x00, 0x00, 0x41, 0x84, 0x00, 0x00, 0x41, 0x84, 0x00, 0x00, 0x41, 0x84, 0x00, 0x00, 0x41, 0x87, 0xff, 0xff, 0xc1, 0x80, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x01, 0x83, 0xff, 0xff, 0xc1, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0x82, 0x00, 0x00, 0x41, 0xfe, 0x00, 0x00, 0x7f 	
	backGroundPrintingUtil:
  MOV AL, 0        ; Color index (0 in this case)
  MOV DX, 0x3C8    ; VGA palette index port
  OUT DX, AL       ; Select color index 0 (background)

  MOV DX, 0x3C9    ; VGA palette data port
  
  ; Current values create a white/bright color
  MOV AL, 20     ; Maximum intensity for Red
  OUT DX, AL
  MOV AL, 20      ; Maximum intensity for Green
  OUT DX, AL
  MOV AL,20      ; Maximum intensity for Blue
  OUT DX, AL

  ; To change color, modify these three OUT DX, AL instructions

  ; Example for pure red:
  ; MOV AL, 63     ; Red at full intensity
  ; OUT DX, AL
  ; MOV AL, 0      ; Green at zero
  ; OUT DX, AL
  ; MOV AL, 0      ; Blue at zero
  ; OUT DX, AL

  ret
	functionGnericBitmaps:
    push bp
    mov bp, sp
    sub sp, 4          ; Make space for 2 local variables (xEnding and yEnding)
    push es
    push ax
    push bx
    push cx
    push dx
    push di
    push si
   
    ; Initialize parameters from the stack
    mov cx, [bp+6]     ; Starting X coordinate
    mov dx, [bp+4]     ; Starting Y coordinate
    mov si, [bp+10]    ; SI points to bitmap data
    mov bx, [bp+8]     ; Bitmap dimension

    ; Calculate xEnding and yEnding
    mov ax, cx
    add ax, bx         ; Add dimension to X 
    mov [bp-4], ax     ; Store xEnding in local variable
    mov ax, dx
    add ax, bx         ; Add dimension to Y
    mov [bp-2], ax     ; Store yEnding in local variable

draw_loopGeneric:
    mov bl, [si]       ; Load byte from bitmap
    inc si             ; Move to next byte
    mov di, 8          ; 8 bits per byte

bit_loopGeneric_:
    shl bl, 1          ; Shift left, bit goes into carry
    jnc skip_pixelGeneric   ; Skip if carry not set

    ; Plot pixel
    mov ah, 0Ch        ; BIOS pixel plot function
    mov bh, 0          ; Page number
    mov al, [bp+12]       ; White color
    int 10h            ; Draw pixel

skip_pixelGeneric:
    inc cx             ; Increment X
    cmp cx, [bp-4]     ; Compare with xEnding
    jl continue_bitGeneric   ; Continue if not reached end

    ; Move to next row
    mov cx, [bp+6]     ; Reset X to starting X
    inc dx             ; Next row
    cmp dx, [bp-2]     ; Check if done
    je doneGeneric           ; Exit if complete

continue_bitGeneric:
    dec di
    jnz bit_loopGeneric_     ; Continue bit processing
    jmp draw_loopGeneric    ; Next byte

doneGeneric:
    ; Restore registers and stack
    pop si
    pop di
    pop dx
    pop cx
    pop bx
    pop ax
    pop es
    mov sp, bp
    pop bp
    ret 10 
PrintEnd:
    push bp
    mov bp, sp
    sub sp, 4          ; Make space for 2 local variables (xEnding and yEnding)
    push es
    push ax
    push bx
    push cx
    push dx
    push di
    push si
    

	
	call backGroundPrintingUtil
    push 15
	push Left
	push 32
	push 265
	push 160
	call functionGnericBitmaps
	push 15
	push Right
	push 32
	push 297
	push 160
	call functionGnericBitmaps
	push 15
	push Bottom
	push 32
	push 265
	push 160+32
	call functionGnericBitmaps
	 push 15
	 push BottomRight
	 push 32
	 push 265+32
	 push 160+32
	 call functionGnericBitmaps
	 mov ax,210
	 	 push 15
	 push G
	 push 32
	 push 220
	 push 240
	 call functionGnericBitmaps
	 push 15
	 push A
	 push 32
	 push 220+40
	 push 240
	 call functionGnericBitmaps
	 push 15
	 push M
	 push 32
	 push 220+40+40
	 push 240
	 call functionGnericBitmaps
     push 15
	 push E
	 push 32
	 push 220+40+40+40
	 push 240
	 call functionGnericBitmaps
	 push 15
	 push O
	 push 32
	 push 220
	 push 240+40
	 call functionGnericBitmaps
	 push 15
	 push V
	 push 32
	 push 220+40
	 push 240+40 
	 call functionGnericBitmaps
	 	 push 15
	 push E
	 push 32
	 push 220+40+40
	 push 240+40 
	 call functionGnericBitmaps
	
	 push 15
	 push R
	 push 32
	 push 220+40+40+40
	 push 240+40 
	 call functionGnericBitmaps
	pop si
    pop di
    pop dx
    pop cx
    pop bx
    pop ax
    pop es
    mov sp, bp
    pop bp
	ret

		
delay:
    push cx
    mov cx, 0xffff
l1: loop l1
    pop cx
    ret

